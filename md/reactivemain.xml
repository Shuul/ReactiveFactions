<?xml version="1.0" encoding="utf-8" ?>

<mdscript name="Reactivemain" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="C:\x4 extract\libraries\md.xsd">
  <cues>
    <cue name="ReactiveInit" version="6">
      <conditions>
        <check_any>
          <event_cue_signalled cue="md.Setup.GameStart" />
          <event_player_created />
          <event_cue_signalled />
          <event_game_loaded />
        </check_any>
      </conditions>
      
      <actions>
        <set_value name="$PlayerPower" exact="99" />
        <!-- FLUFF for power levels -->
        <set_value name="$PlayerPowerName0" exact="'You are nameless privateer.'"/>
        <set_value name="$PlayerPowerName1" exact="'You are now Small Organization.'"/>
        <set_value name="$PlayerPowerName2" exact="'You are now Large Organization.'"/>
        <set_value name="$PlayerPowerName3" exact="'You are now Minor Faction.'"/>
        <set_value name="$PlayerPowerName4" exact="'You are now Major Faction.'"/>

        <set_value name="$PlayerPowerFluff0" exact="'You are currently not noticed by Major Factions of the galaxy and your actions with their enemies do not bother them.'"/>
        <set_value name="$PlayerPowerFluff1" exact="'You are now considered as small organisation with limited influence, some of your positive deals may make their enemies a bit worried.'"/>
        <set_value name="$PlayerPowerFluff2" exact="'Your influence on galaxy arena grows and Major Faction start to pay close attention to your deals with their enemies. '"/>
        <set_value name="$PlayerPowerFluff3" exact="'You are acknowledged as powerful player on galaxy arena, pay attention to your actions as not everyone will like you to befreind their enemies.'"/>
        <set_value name="$PlayerPowerFluff4" exact="'Major Factions do now consider you to be equal to them, your positive deals with their enemies can lead to noticable consequences.'"/>
     </actions>
     <patch sinceversion="6">
      <!-- simple reset so the sub cues are called again. -->
      <reset_cue cue="this"/>
    </patch>
      <cues>
        <cue name="ReactivePlayerPowerUpdate" instantiate="true" checkinterval="20min" checktime="player.age + 60s">
          <actions>

            <set_value name="$PlayerTotalAssetsCost" exact="0Cr" />

            <!-- <do_if value="$PlayerPower?">
              <remove_value name="$PlayerPower" />
            </do_if> -->

            <!-- <do_if value="$CivAssetCostModifier?">
              <remove_value name="$CivAssetCostModifier"/>
            </do_if> -->

            <!-- cost modifier for civilian ships (NOT USED as of now) -->
            <set_value name="$CivAssetCostModifier" exact="(6.5Cr)" />

            <!-- calculating total assets cost -->
            <find_object name="$PlayerAssetsList" owner="faction.player" space="player.galaxy"  multiple="true" recursive="true" />
            <do_for_each name="$Asset" in="$PlayerAssetsList">
              <do_if value="$Asset.value ge 150000Cr">
                <do_if value="$Asset.primarypurpose == purpose.trade">
                  <set_value name="$PlayerTotalAssetsCost" exact="($Asset.value )/1Cr" operation="add" comment="round"/>
                  <debug_to_file name="'ReactiveFactionsCalcAssets'" directory="'ReactiveFactions'" text="player.age + '; added ' + $Asset.macro + ' of type ' + $Asset.primarypurpose + ' with cost of ' + ($Asset.value)/1Cr + ' total cost now ' + $PlayerTotalAssetsCost" output="false" append="true" />
                </do_if>

                <do_elseif value="$Asset.primarypurpose == purpose.mine">
                  <set_value name="$PlayerTotalAssetsCost" exact="($Asset.value )/1Cr" operation="add" comment="round"/>
                  <debug_to_file name="'ReactiveFactionsCalcAssets'" directory="'ReactiveFactions'" text="player.age + '; added ' + $Asset.macro + ' of type ' + $Asset.primarypurpose + ' with cost of ' + ($Asset.value)/1Cr + ' total cost now ' + $PlayerTotalAssetsCost" output="false" append="true" />
                </do_elseif>

                <do_elseif value="$Asset.primarypurpose == purpose.auxiliary">
                  <set_value name="$PlayerTotalAssetsCost" exact="($Asset.value )/1Cr" operation="add" comment="round"/>
                  <debug_to_file name="'ReactiveFactionsCalcAssets'" directory="'ReactiveFactions'" text="player.age + '; added ' + $Asset.macro + ' of type ' + $Asset.primarypurpose + ' with cost of ' + ($Asset.value)/1Cr + ' total cost now ' + $PlayerTotalAssetsCost" output="false" append="true" />
                </do_elseif>

                <do_elseif value="$Asset.primarypurpose == purpose.production">
                  <set_value name="$PlayerTotalAssetsCost" exact="($Asset.value )/1Cr" operation="add" comment="round"/>
                  <debug_to_file name="'ReactiveFactionsCalcAssets'" directory="'ReactiveFactions'" text="player.age + '; added ' + $Asset.macro + ' of type ' + $Asset.primarypurpose + ' with cost of ' + ($Asset.value)/1Cr + ' total cost now ' + $PlayerTotalAssetsCost" output="false" append="true" />
                </do_elseif>

                <do_else>
                  <set_value name="$PlayerTotalAssetsCost" exact="($Asset.value)/1Cr" operation="add" comment="round"/>
                  <debug_to_file name="'ReactiveFactionsCalcAssets'" directory="'ReactiveFactions'" text="player.age + '; added ' + $Asset.macro + ' of type ' + $Asset.primarypurpose + ' with cost of ' + ($Asset.value)/1Cr + ' total cost now ' + $PlayerTotalAssetsCost" output="false" append="true" />
                </do_else>
              </do_if>
            </do_for_each>

            <set_value name="$PlayerTotalAssetsCost" exact="(player.money)/1Cr"  operation="add" comment="round"/>

            <do_if value="$PlayerTotalAssetsCost lt 100000000">
              <do_if value="$PlayerPower == 99">
                <set_value name="$PlayerPower" exact="0" />
                <show_help duration="3s" custom="$PlayerPowerFluff0 + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
                <write_to_logbook category="tips" title="$PlayerPowerName0" text="$PlayerPowerFluff0  + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
              </do_if>
              <do_else>
                <set_value name="$OldPlayerPower" exact="$PlayerPower" />
                <set_value name="$PlayerPower" exact="0" />
                <do_if value="$PlayerPower != $OldPlayerPower">
                  <show_help duration="3s" custom="$PlayerPowerFluff0 + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
                  <write_to_logbook category="tips" title="$PlayerPowerName0" text="$PlayerPowerFluff0  + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
                </do_if>
               </do_else>
              <debug_to_file name="'ReactiveFactions'" directory="'ReactiveFactions'" text="player.age + '; player assets cost is ' + $PlayerTotalAssetsCost + ' and power level of ' + $PlayerPower" output="false" append="true" />
            </do_if>
            <do_elseif value="$PlayerTotalAssetsCost lt 200000000">
              <do_if value="$PlayerPower == 99">
                <set_value name="$PlayerPower" exact="1" />
                <show_help duration="3s" custom="$PlayerPowerFluff1 + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
                <write_to_logbook category="tips" title="$PlayerPowerName1" text="$PlayerPowerFluff1  + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
              </do_if>
              <do_else>
                <set_value name="$OldPlayerPower" exact="$PlayerPower" />
                <set_value name="$PlayerPower" exact="1" />
                <do_if value="$PlayerPower != $OldPlayerPower">
                  <show_help duration="3s" custom="$PlayerPowerFluff1 + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
                  <write_to_logbook category="tips" title="$PlayerPowerName1" text="$PlayerPowerFluff1 + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
                </do_if>
              </do_else>
              <debug_to_file name="'ReactiveFactions'" directory="'ReactiveFactions'" text="player.age + '; player assets cost is ' + $PlayerTotalAssetsCost + ' and power level of ' + $PlayerPower" output="false" append="true" />
            </do_elseif>
            <do_elseif value="$PlayerTotalAssetsCost lt 400000000">
              <do_if value="$PlayerPower == 99">
                <set_value name="$PlayerPower" exact="2" />
                <show_help duration="3s" custom="$PlayerPowerFluff2 + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
                <write_to_logbook category="tips" title="$PlayerPowerName2" text="$PlayerPowerFluff2  + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
              </do_if>
              <do_else>
                <set_value name="$OldPlayerPower" exact="$PlayerPower" />
                <set_value name="$PlayerPower" exact="2" />
                <do_if value="$PlayerPower != $OldPlayerPower">
                  <show_help duration="3s" custom="$PlayerPowerFluff2 + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
                  <write_to_logbook category="tips" title="$PlayerPowerName2" text="$PlayerPowerFluff2  + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
                </do_if>
              </do_else>
              <debug_to_file name="'ReactiveFactions'" directory="'ReactiveFactions'" text="player.age + '; player assets cost is ' + $PlayerTotalAssetsCost + ' and power level of ' + $PlayerPower" output="false" append="true" />
            </do_elseif>
            <do_elseif value="$PlayerTotalAssetsCost lt 800000000">
              <do_if value="$PlayerPower == 99">
                <set_value name="$PlayerPower" exact="3" />
                <show_help duration="3s" custom="$PlayerPowerFluff3 + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
                <write_to_logbook category="tips" title="$PlayerPowerName3" text="$PlayerPowerFluff3  + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
              </do_if>
              <do_else>
                <set_value name="$OldPlayerPower" exact="$PlayerPower" />
                <set_value name="$PlayerPower" exact="3" />
                <do_if value="$PlayerPower != $OldPlayerPower">
                  <show_help duration="3s" custom="$PlayerPowerFluff3 + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
                  <write_to_logbook category="tips" title="$PlayerPowerName3" text="$PlayerPowerFluff3  + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
                </do_if> 
              </do_else>
              <debug_to_file name="'ReactiveFactions'" directory="'ReactiveFactions'" text="player.age + '; player assets cost is ' + $PlayerTotalAssetsCost + ' and power level of ' + $PlayerPower" output="false" append="true" />
            </do_elseif>
            <do_else>
              <do_if value="$PlayerPower == 99">
                <set_value name="$PlayerPower" exact="4" />
                <show_help duration="3s" custom="$PlayerPowerFluff4 + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
                <write_to_logbook category="tips" title="$PlayerPowerName4" text="$PlayerPowerFluff4  + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
              </do_if>
              <do_else>
                <set_value name="$OldPlayerPower" exact="$PlayerPower" />
                <set_value name="$PlayerPower" exact="4" />
                <do_if value="$PlayerPower != $OldPlayerPower">
                  <show_help duration="3s" custom="$PlayerPowerFluff4 + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
                  <write_to_logbook category="tips" title="$PlayerPowerName4" text="$PlayerPowerFluff4  + ' Your total assets cost estiamted at: ' + $PlayerTotalAssetsCost" />
                </do_if>
              </do_else>
              <debug_to_file name="'ReactiveFactions'" directory="'ReactiveFactions'" text="player.age + '; player assets cost is ' + $PlayerTotalAssetsCost + ' and power level of ' + $PlayerPower" output="false" append="true" />
            </do_else>
            <remove_value name="$PlayerTotalAssetsCost" />
          </actions>
        </cue>
        <cue name="ReactiveApplyRepPenalty" instantiate="true">
          <conditions>
            <event_player_relation_changed/>
            <!-- only for positive changes -->
            <check_value value="event.object == null and event.param != null and event.param2.{1} gt event.param2.{2}" />
            <!-- Created a library for the check, max change will be ui value of -2 DA-->
            <!-- <check_value value="[(event.param2.{1} - event.param2.{2}), 0.032].min" /> DA-->
			<!-- to prevent running before power is checked DA-->
		    	<check_value value="$PlayerPower != 99" />
          </conditions>
          <actions>
            <set_value name="$FactionMain" exact="event.param" />
            <set_value name="$RepDiff" exact="event.param2.{1} - event.param2.{2}"/>
            <!-- Power level hit multiplayers -->
            <set_value name="$RepMultPowerLvl1" exact="0.25" />
            <set_value name="$RepMultPowerLvl2" exact="0.75" />
            <set_value name="$RepMultPowerLvl3" exact="1.25" />
            <set_value name="$RepMultPowerLvl4" exact="2" />
            
            <get_factions_by_relation relation="killmilitary" faction="$FactionMain" result="$EnemiesList" />
			<!-- we could just use remove_from_list here -->
			<set_value name="$IgnoredListofEnemies" exact="[faction.buccaneers, faction.civilian, faction.criminal, faction.holyorderfanatic, faction.khaak, faction.smuggler, faction.trinity, faction.visitor, faction.xenon]" />
			<remove_from_list name="$EnemiesList" list="$IgnoredListofEnemies" multiple="true"/>
            
            <do_for_each name="$Enemy" in="$EnemiesList">
				<!-- Remove buccaneers, holyorderfanatic,  trinity when added. DA-->
				<!-- cleaned up this long entry and formatting DA-->
				<do_if value="($Enemy != null) and (not $IgnoredListofEnemies.indexof.{$Enemy})">
					<do_if value="($PlayerPower == 0)">
						<!-- do nothing on power level 0 -->
						<debug_to_file name="'ReactiveRepUpdate'" directory="'ReactiveFactions'" text="player.age + '; rep was not changed (PL0) with ' + $Enemy + ' due to change with ' + $FactionMain + ' rep diff was ' + $RepDiff + ' with current power level of ' + $PlayerPower" output="false" append="true" />
					</do_if>
					<do_if value="($PlayerPower gt 0) and ($PlayerPower le 4)">
						<do_if value="$PlayerPower == 1">
							<set_value name="$RepHit" exact="($RepDiff * $RepMultPowerLvl1) * -1"/>
						</do_if>
						<do_if value="$PlayerPower == 2">
							<set_value name="$RepHit" exact="($RepDiff * $RepMultPowerLvl2) * -1"/>
						</do_if>
						<do_if value="$PlayerPower == 3">
							<set_value name="$RepHit" exact="($RepDiff * $RepMultPowerLvl3) * -1"/>
						</do_if>
						<do_if value="$PlayerPower == 4">
							<set_value name="$RepHit" exact="($RepDiff * $RepMultPowerLvl4) * -1"/>
						</do_if>
						<do_if value="$Enemy.relationto.{$FactionMain} lt $Enemy.relationto.{faction.player}">
							<!-- Check that change isn't more than -2 ui value. If it is, then only go down 2 UI DA-->
							<set_value name="$FactionOne" exact="$Enemy" />
							<set_value name="$FactionTwo" exact="faction.player" />
							<set_value name="$UIRelationChange" exact="-2" />
							<include_actions ref="CalculateUiValueRepChange" />
							<do_if value="$RepHit lt $AbsoluteRepValueChange and $AbsoluteRepValueChange != null">
								<debug_to_file name="'ReactiveRepUpdate'" directory="'ReactiveFactions'" text="player.age + '; RepHit: ' + $RepHit + ' was harsher than -2 UI. Changed to AbsoluteRepValueChange: ' + $AbsoluteRepValueChange" output="false" append="true" />
								<set_value name="$RepHit" exact="$AbsoluteRepValueChange" />
							</do_if>
							<remove_value name="$AbsoluteRepValueChange" />
							<!-- Trying to simplify the notification stuff DA-->
							<do_if value="((($Enemy.relationto.{faction.player} + $RepHit) lt 0.1) and ($Enemy.relationto.{faction.player} ge 0.1)) or ((($Enemy.relationto.{faction.player} + $RepHit) lt 0.01) and ($Enemy.relationto.{faction.player} ge 0.01)) or ((($Enemy.relationto.{faction.player} + $RepHit) lt -0.01) and ($Enemy.relationto.{faction.player} ge -0.01)) or ((($Enemy.relationto.{faction.player} + $RepHit) lt -0.1) and ($Enemy.relationto.{faction.player} ge -0.1)) or ((($Enemy.relationto.{faction.player} + $RepHit) lt -0.32) and ($Enemy.relationto.{faction.player} ge -0.32))">
								<set_faction_relation faction="$Enemy" otherfaction="faction.player" value="[($Enemy.relationto.{faction.player} + $RepHit), -1].max"/>
								<set_faction_relation faction="faction.player" otherfaction="$Enemy" value="$Enemy.relationto.{faction.player}"/>
								<debug_to_file name="'ReactiveRepUpdate'" directory="'ReactiveFactions'" text="player.age + '; rep was changed with ' + $Enemy + ' for: ' + $RepHit + ' due to change with ' + $FactionMain + ' rep diff was ' + $RepDiff + ' with current power level of ' + $PlayerPower + ' with notification.'" output="false" append="true" />
							</do_if>
							<do_else>
								<set_faction_relation faction="$Enemy" otherfaction="faction.player" value="[($Enemy.relationto.{faction.player} + $RepHit), -1].max" reason="null"/>
								<set_faction_relation faction="faction.player" otherfaction="$Enemy" value="$Enemy.relationto.{faction.player}" reason="null"/>
								<debug_to_file name="'ReactiveRepUpdate'" directory="'ReactiveFactions'" text="player.age + '; rep was changed with ' + $Enemy + ' for: ' + $RepHit + ' due to change with ' + $FactionMain + ' rep diff was ' + $RepDiff + ' with current power level of ' + $PlayerPower + ' without notification.'" output="false" append="true" />
							</do_else>
						</do_if>
						<do_elseif value="$Enemy.relationto.{$FactionMain} ge $Enemy.relationto.{faction.player}">
							<debug_to_file name="'ReactiveRepUpdate'" directory="'ReactiveFactions'" text="player.age + '; rep was not changed with ' + $Enemy + ' for: ' + $RepHit + ' due to ' + $FactionMain + ' player already having a lower reputation with current power level of ' + $PlayerPower" output="false" append="true" />
						</do_elseif>              
						<remove_value name="$RepHit" />
					</do_if>
				</do_if>
				<do_else>
					<debug_to_file name="'ReactiveRepUpdate'" directory="'ReactiveFactions'" text="player.age + '; Excluded faction ' + $Enemy + ' or something wrong'" output="false" append="true" />
				</do_else>
			</do_for_each>
			<remove_value name="$Enemy" />
			<remove_value name="$EnemiesList" />
          </actions>
        </cue>
		<library name="CalculateUiValueRepChange">
			<actions>
						<!-- 1.0 = 30		0.32 = 25		0.1 = 20		0.032 = 15		0.01 = 10		0.0032 = 5 -->
						<!-- 1.0 = 30		0.316 = 25		0.1 = 20		0.0316 = 15		0.01 = 10		0.00316 = 5 -->
						<!-- Requires $FactionOne, $FactionTwo, and $UIRelationChange DA-->
						<!-- Returns $NewAbsoluteRepValue and $AbsoluteRepValueChange DA-->
				<do_if value="$UIRelationChange != 0">
					<set_value name="$OldUIRepValue" exact="$FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
					<set_value name="$OldAbsoluteRepValue" exact="$FactionOne.relationto.{$FactionTwo}" />
					<do_if value="($OldUIRepValue ge 5) or ($OldUIRepValue le -5)">
						<set_value name="$NewUIRepValue" exact="$OldUIRepValue + $UIRelationChange" />
						<!-- =(10^(SQRT((S2+T2)^2)/10)/1000)*IF(S2+T2<0,-1,1) -->
              <set_value name="$NewAbsoluteRepValue" exact="(10^(sqrt(($OldUIRepValue + $UIRelationChange) ^ 2)/10) / 1000) * (if ($OldUIRepValue + $UIRelationChange lt 0) then -1 else 1)" />
            <do_if value="$NewAbsoluteRepValue lt -1">
							<set_value name="$NewAbsoluteRepValue" exact="-1" />
						</do_if>
						<do_if value="$NewAbsoluteRepValue gt 1">
							<set_value name="$NewAbsoluteRepValue" exact="1" />
						</do_if>
						<set_value name="$AbsoluteRepValueChange" exact="$NewAbsoluteRepValue - $OldAbsoluteRepValue" />
					</do_if>
					<do_if value="($OldUIRepValue lt 5) and ($OldUIRepValue gt -5)">
						<set_value name="$NewUIRepValue" exact="$OldUIRepValue + $UIRelationChange" />
						<set_value name="$NewAbsoluteRepValue" exact="$OldAbsoluteRepValue + ($UIRelationChange * 0.00064)" />
						<set_value name="$AbsoluteRepValueChange" exact="$NewAbsoluteRepValue - $OldAbsoluteRepValue" />
					</do_if>
				</do_if>
			</actions>
		</library>
      </cues>
    </cue>
  </cues>
</mdscript>